<?xml version="1.0"?>
<ruleset name="HM Required">
	<description>Human Made base level coding standards.</description>

	<file>.</file>

	<exclude-pattern>node_modules/*</exclude-pattern>
	<exclude-pattern>vendor/*</exclude-pattern>

	<arg name="basepath" value="." />
	<arg name="extensions" value="php" />

	<autoload>../HM/bootstrap.php</autoload>

	<!-- Check for PHP cross-version compatibility. -->
	<config name="testVersion" value="7.1-" />
	<rule ref="PHPCompatibilityWP" />

	<!--
		Rules based on WordPress-Core
	-->

	<!-- Disallow slow database queries -->
	<rule ref="WordPress.DB.SlowDBQuery" />

	<!-- Require output is escaped. -->
	<!-- Note: we use our version of EscapeOutput to ignore error-reporting functions. -->
	<!-- <rule ref="WordPress.Security.EscapeOutput"> -->
	<rule ref="HM.Security.EscapeOutput">
		<properties>
			<property name="customEscapingFunctions" type="array">
				<element value="whitelist_html" />
			</property>
			<property name="customAutoEscapedFunctions" type="array">
				<element value="admin_url" />
			</property>
		</properties>
	</rule>

	<!-- Disallow use of __FILE__ in menu slugs, which exposes the filesystem's data. -->
	<rule ref="WordPress.Security.PluginMenuSlug" />
	<rule ref="WordPress.Security.PluginMenuSlug.Using__FILE__">
		<type>error</type>
	</rule>

	<!-- Disallow functions where WordPress has an alternative. -->
	<rule ref="WordPress.WP.AlternativeFunctions">
		<!-- ...but, allow some back in. -->
		<properties>
			<property name="exclude" type="array">
				<element value="file_get_contents" />
				<element value="file_system_read" />
				<element value="json_encode" />
				<element value="json_decode" />
			</property>
		</properties>
	</rule>
	<rule ref="WordPress.DB.RestrictedFunctions" />
	<rule ref="WordPress.DB.RestrictedClasses" />

	<!-- Disallow eval(). (From WordPress-Core) -->
	<rule ref="Squiz.PHP.Eval"/>
	<rule ref="Squiz.PHP.Eval.Discouraged">
		<type>error</type>
		<message>eval() is a security risk so not allowed.</message>
	</rule>

	<!-- Disallow create_function() -->
	<rule ref="WordPress.PHP.RestrictedPHPFunctions"/>

	<!-- Disallow goto function. -->
	<!-- Remove after https://github.com/squizlabs/PHP_CodeSniffer/pull/1664 -->
	<rule ref="WordPress.PHP.DiscourageGoto"/>
	<rule ref="WordPress.PHP.DiscourageGoto.Found">
		<type>error</type>
		<message>The "goto" language construct should not be used.</message>
	</rule>

	<!-- Disallow cron checks which are too frequent. -->
	<rule ref="WordPress.WP.CronInterval" />
	<rule ref="WordPress.WP.CronInterval.CronSchedulesInterval">
		<type>error</type>
		<message>Scheduling crons at %s sec ( less than %s minutes ) is prohibited.</message>
	</rule>

	<!-- Disallow querying more than 100 posts at once. -->
	<rule ref="WordPress.WP.PostsPerPage" />
	<rule ref="WordPress.WP.PostsPerPage.posts_per_page_numberposts">
		<type>error</type>
	</rule>
	<rule ref="WordPress.WP.PostsPerPage.posts_per_page_posts_per_page">
		<type>error</type>
	</rule>

	<!-- Disallow changing PHP's timezone. -->
	<rule ref="WordPress.WP.TimezoneChange" />

	<!-- Disallow short PHP tags. (From WordPress-Core) -->
	<rule ref="Generic.PHP.DisallowShortOpenTag" />
	<rule ref="Generic.PHP.DisallowAlternativePHPTags" />

	<!-- Require prepared SQL statements. -->
	<rule ref="WordPress.DB.PreparedSQL" />
	<rule ref="WordPress.DB.PreparedSQLPlaceholders" />

	<!-- Disallow BOM, which causes issues with headers being sent. (From WordPress-Core) -->
	<rule ref="Generic.Files.ByteOrderMark" />

	<!-- Disallow empty statements. -->
	<rule ref="WordPress.CodeAnalysis.EmptyStatement" />

	<!-- Require correct usage of WP's i18n functions. -->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="check_translator_comments" value="false" />
		</properties>
	</rule>

	<!--
		Rules based on WordPress-Extra
	-->
	<!-- Disallow parts of PHP which may cause compatibility issues. -->
	<rule ref="Generic.PHP.ForbiddenFunctions" />
	<rule ref="Generic.Functions.CallTimePassByReference" />

	<!-- Disallow "development" functions like var_dump/print_r/phpinfo -->
	<rule ref="WordPress.PHP.DevelopmentFunctions">
		<!-- Allow triggering errors for reporting purposes. -->
		<exclude name="WordPress.PHP.DevelopmentFunctions.error_log_error_log" />
		<exclude name="WordPress.PHP.DevelopmentFunctions.error_log_trigger_error" />

		<!-- Allow overriding the error handler. -->
		<exclude name="WordPress.PHP.DevelopmentFunctions.error_log_set_error_handler" />

		<!-- Set all to errors. -->
		<type>error</type>
	</rule>

	<!-- Disallow a bunch of functions which change config. -->
	<rule ref="WordPress.PHP.DiscouragedPHPFunctions">
		<properties>
			<property name="exclude" type="array">
				<!-- Allow serializing -->
				<element value="serialize" />

				<!-- Allow base64 encoding -->
				<element value="obfuscation" />

				<!-- Allow regular URL encoding -->
				<element value="urlencode" />
			</property>
		</properties>

		<!-- Set all to errors. -->
		<type>error</type>
	</rule>
	<!-- <rule ref="WordPress.PHP.DiscouragedPHPFunctions.runtime_configuration">
		<type>error</type>
	</rule> -->

	<!-- Disallow parts of WP which have been deprecated. -->
	<rule ref="WordPress.WP.DeprecatedFunctions" />
	<rule ref="WordPress.WP.DeprecatedClasses" />
	<rule ref="WordPress.WP.DeprecatedParameters" />
	<rule ref="WordPress.WP.DeprecatedParameterValues" />

	<!-- Disallow parts of WP which have better alternatives. -->
	<rule ref="WordPress.WP.DiscouragedConstants" />
	<rule ref="WordPress.WP.DiscouragedFunctions" />

	<!-- Disallow the backtick operator (which calls out to the system). -->
	<rule ref="Generic.PHP.BacktickOperator" />

	<!-- Require valid syntax. -->
	<rule ref="Generic.PHP.Syntax" />

	<!-- Disallow silencing errors. -->
	<rule ref="WordPress.PHP.NoSilencedErrors" />

	<!--
		Based on WordPress-VIP
	-->
	<!-- Require nonce verification. -->
	<rule ref="WordPress.Security.NonceVerification" />

	<!-- Validate sanitised input. -->
	<rule ref="WordPress.Security.ValidatedSanitizedInput"/>

	<!-- Require strict types for in_array() calls. -->
	<rule ref="WordPress.PHP.StrictInArray"/>

	<!-- Disallow querying the database directly. -->
	<rule ref="WordPress.DB.DirectDatabaseQuery" />
	<!--
	<rule ref="WordPress.DB.DirectDatabaseQuery.SchemaChange">
		<type>error</type>
		<message>Attempting a database schema change is highly discouraged.</message>
	</rule> -->
	<!--
	<rule ref="WordPress.DB.DirectDatabaseQuery.NoCaching">
		<type>error</type>
		<message>Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete.</message>
	</rule> -->

	<!-- Require wp_safe_redirect() instead of wp_redirect -->
	<!-- <rule ref="WordPress.Security.SafeRedirect"/> -->
</ruleset>
